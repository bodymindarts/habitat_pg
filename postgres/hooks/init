#!/bin/sh
#

exec 2>&1

mkdir -p {{pkg.svc_config_path}}/conf.d
mkdir -p {{pkg.svc_var_path}}/pg_stat_tmp

chown -R hab:hab {{pkg.svc_var_path}}

{{#unless svc.me.follower ~}}
if [[ ! -f "{{pkg.svc_data_path}}/PG_VERSION" ]]; then
  echo " Database does not exist, creating with 'initdb'"
  initdb -U {{cfg.initdb_superuser_name}} \
         -E {{cfg.initdb_encoding}} \
         -D {{pkg.svc_data_path}} \
         --pwfile {{cfg.initdb_pwfile}} \
         --no-locale && \
  rm {{pkg.svc_config_path}}/pwfile
fi
{{~/unless}}
{{#if svc.me.follower ~}}
PGPASSWORD={{cfg.initdb_superuser_password}} psql -U {{cfg.initdb_superuser_name}}  -h {{svc.leader.sys.ip}} -p {{cfg.port}} postgres >/dev/null 2>&1 << EOF
DO \$$
BEGIN
  PERFORM * FROM pg_authid WHERE rolname = '{{cfg.replication_user_name}}';
    IF FOUND THEN
        ALTER ROLE "{{cfg.replication_user_name}}" WITH REPLICATION LOGIN PASSWORD '{{cfg.replication_password}}';
    ELSE
        CREATE ROLE "{{cfg.replication_user_name}}" WITH REPLICATION LOGIN PASSWORD '{{cfg.replication_password}}';
    END IF;
END;
\$$
EOF

if [ $? != 0 ]; then
  echo 'Waiting for leader to become available before initializing'
  exit 1
fi

echo 'Bootstrapping from leader'

rm -rf {{pkg.svc_data_path}}/*
PGPASSWORD={{cfg.replication_password}} pg_basebackup --pgdata={{pkg.svc_data_path}} --xlog-method=stream --dbname='postgres://{{cfg.replication_user_name}}@{{svc.leader.sys.ip}}:{{cfg.port}}/postgres'
{{~/if}}
